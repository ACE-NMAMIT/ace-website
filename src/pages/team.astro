---
import Layout from '../layouts/Layout.astro';
import { faculty } from '@lib/constants';

const teamMembers = [
  { name: 'James Henry', position: 'HOD', image: '/images/sample.png', startYear: 2023 },
  { name: 'John Doe', position: 'Assistant Professor', image: '/images/sample.png', startYear: 2023 },
  { name: 'Srinivasa', position: 'Professor II', image: '/images/sample.png', startYear: 2023 },
  { name: 'Mykel Smith', position: 'Professor', image: '/images/sample.png', startYear: 2024 },
  { name: 'Angel Smith', position: 'Professor II', image: '/images/sample.png', startYear: 2024 },
];

const years = Array.from(new Set(teamMembers.map((member) => member.startYear)));
---

<Layout>
  <section class="tabs">
    {
      years.map((year, i) => {
        return <input type="radio" id="" name="tab-control" checked={i == 0} />;
      })
    }
    <input type="radio" data-index={years.length} name="tab-control" />

    <ul>
      <li><label for="tab1" role="button"><span>2023-24</span></label></li>
      <li><label for="tab2" role="button"><span>2024-25</span></label></li>

      {
        years.map((year, i) => {
          return (
            <li>
              <label role="button">
                <span>Faculty</span>
              </label>
            </li>
          );
        })
      }

      <li><label role="button"><span>Faculty</span></label></li>;

    </ul>
    <div class="content">
      <section>
        <div class="card_Container">
          {
            teamMembers2023.map((member) => (
              <div class="card">
                <div class="imgBx">
                  <img src={member.image} alt={member.name} />
                </div>
                <div class="content">
                  <div class="contentBx">
                    <h3>
                      {member.name}{' '}
                      <>
                        <br />
                        <span>{member.position}</span>
                      </>
                    </h3>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </section>

      <!-- Similar sections for other teams -->

      <section>
        <div class="card_Container">
          {
            teamMembers2024.map((member) => (
              <div class="card">
                <div class="imgBx">
                  <img src={member.image} alt={member.name} />
                </div>
                <div class="content">
                  <div class="contentBx">
                    <h3>
                      {member.name}{' '}
                      <>
                        <br />
                        <span>{member.position}</span>
                      </>
                    </h3>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </section>

      <!-- Similar sections for other teams -->

      <section>
        <div class="card_Container">
          {
            faculty.map((member) => (
              <div class="card">
                <div class="imgBx">
                  <img src={member.image} alt={member.name} />
                </div>
                <div class="content">
                  <div class="contentBx">
                    <h3>
                      {member.name}{' '}
                      <>
                        <br />
                        <span>{member.position}</span>
                      </>
                    </h3>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </section>
    </div>
  </section>
</Layout>

<style>
  /* Tabs Navigation */
  .tabs {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    margin-top: 100px;
    align-items: center; /* Center the tabs container */
  }

  .tabs input[type='radio'] {
    display: none;
  }

  .tabs ul {
    display: flex;
    justify-content: center; /* Center the tabs */
    gap: 20px; /* Adjust space between tabs */
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tabs ul li {
    flex: none;
  }

  .tabs ul li label {
    display: block;
    padding: 10px 15px;
    text-align: center;
    cursor: pointer;
    color: rgb(233, 227, 227);
    font-size: 24px;
    background: none;
    border: none;
    position: relative;
    overflow: hidden;
    transition:
      color 0.3s,
      font-weight 0.3s;
  }

  .tabs ul li label::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(to right, #00f, rgb(46, 144, 235));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease-out;
    border-radius: 0 0 5px 5px;
  }

  .tabs ul li label:hover::after {
    transform: scaleX(1);
  }

  .tabs input[type='radio']#tab1:checked ~ ul li label[for='tab1']::after,
  .tabs input[type='radio']#tab2:checked ~ ul li label[for='tab2']::after,
  .tabs input[type='radio']#tab3:checked ~ ul li label[for='tab3']::after {
    transform: scaleX(1);
  }

  .tabs input[type='radio']#tab1:checked ~ ul li label[for='tab1'],
  .tabs input[type='radio']#tab2:checked ~ ul li label[for='tab2'],
  .tabs input[type='radio']#tab3:checked ~ ul li label[for='tab3'] {
    color: #edf0f3;
    font-weight: bold;
  }

  .tabs .content section {
    display: none;
    padding: 10px;
  }

  .tabs input[type='radio']#tab1:checked ~ .content section:nth-of-type(1),
  .tabs input[type='radio']#tab2:checked ~ .content section:nth-of-type(2),
  .tabs input[type='radio']#tab3:checked ~ .content section:nth-of-type(3) {
    display: block;
  }

  .card_Container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    margin: 40px 0;
    gap: 50px; /*gap between the cards*/
  }

  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(50px); /* Cards start from below */
    }
    100% {
      opacity: 1;
      transform: translateY(0); /* Cards end at their normal position */
    }
  }

  .card {
    position: relative;
    width: 300px;
    height: 400px;
    margin: 20px;
    overflow: hidden;
    /* box-shadow: 0 30px 30px -20px rgba(0, 0, 0, 1), inset 0 0 0 1000px rgba(22, 160, 133, .6); */
    border-radius: 15px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(
      45deg,
      #64cfe243 40%,
      rgba(6, 100, 252, 0.414),
      rgba(6, 100, 252, 0.317) 60%,
      transparent
    );
    opacity: 0; /* Initially hidden */
    /* Start the card slightly below */
    background-size: 200% 200%;
    background-position: 100% 0;
    transition: background-position 0.4s ease-in-out;
  }

  .card.show {
    animation: fadeInUp 0.6s forwards;
  }

  .card.visible {
    opacity: 1; /* Fade-in */
    transform: translateY(0); /* Slide-up */
  }

  .card .imgBx {
    position: relative;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    overflow: hidden;
    margin-bottom: 7rem;
  }

  .card .imgBx img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .card .content {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 160px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    backdrop-filter: blur(15px);
    box-shadow: 0 -10px 10px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 15px;
  }

  .content .contentBx h3 {
    text-transform: uppercase;
    color: #fff;
    letter-spacing: 2px;
    font-weight: 500;
    font-size: 18px;
    text-align: center;
    margin: 20px 0 15px;
    line-height: 1.1em;
  }
</style>
<script>
  const cards = document.querySelectorAll('.card');

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show'); // Add 'show' class when the card is in view
        }
      });
    },
    {
      threshold: 0.1, // Trigger when 10% of the card is visible
    }
  );

  cards.forEach((card) => {
    observer.observe(card);
  });
</script>
