---
import Layout from '@layouts/Layout.astro';
const blogs = [
  {
    id: 1,
    title: 'How to build a blog with Astro',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'Bhavya Nayak',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 1,
  },
  {
    id: 2,
    title: 'How to build a blog with Astro',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'John Doe',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 1,
  },
  {
    id: 3,
    title: 'How to build a blog with Astro',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'John Doe',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 1,
  },
  {
    id: 4,
    title: 'How to use GitHub Copilot for coding',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'Jane Smith',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 2,
  },
  {
    id: 5,
    title: 'Introduction to React Hooks',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'Jane Smith',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 2,
  },
  {
    id: 6,
    title: 'Getting Started with Node.js',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'Jane Smith',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 2,
  },
  {
    id: 7,
    title: 'Mastering CSS Grid Layout',
    content: 'This is a blog content',
    description:
      'This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description. This is a blog description.',
    createdAt: '2022-01-01',
    authorName: 'Jane Smith',
    image: 'https://images.pexels.com/photos/1000366/pexels-photo-1000366.jpeg',
    authorId: 2,
  },
];
---

<!-- ---
import { db } from "@lib/db";
import Layout from "../../layouts/Layout.astro";
import { blogTable } from "@lib/db/schema";

const blogs = await db
  .select({
    id: blogTable.id,
    image: blogTable.image,
    title: blogTable.title,
    description: blogTable.description,
  })
  .from(blogTable);
---

<Layout title="blogs">
  <main class="mt-20 content-container">
    <h1 class="text-4xl font-bold mb-8">Blogs</h1>

    <div class="flex gap-4">
      {
        blogs.map((blog) => (
          <a href={`blogs/${blog.id}`} class="w-72 shadow-xl">
            <figure>
              <img id={blog.id.toString()} src={blog.image} alt={blog.title} class="aspect-[4/3] object-cover" />
            </figure>
            <div class="">
              <h2 class="">{blog.title}</h2>
              <p>{blog.description}</p>
            </div>
          </a>
        ))
      }
    </div>
</Layout>
<style>
  body {
    overflow-x: hidden;
  }
  #tsparticles {
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: -1; /* Ensures particles are behind other content */
  }
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .fade-up {
    opacity: 0;
    transform: translateY(50px);
    animation: slideUp 1s ease-out forwards;
  }
  #tsparticles canvas {
    filter: blur(7px);
  }
</style>

<script>
  import gsap from 'gsap';
  import ScrollTrigger from 'gsap/src/ScrollTrigger';
  gsap.registerPlugin(ScrollTrigger);

  const cards = gsap.utils.toArray('.item') as HTMLDivElement[];

  cards.forEach((element, i) => {
    gsap.set(element, { opacity: 0 });
    gsap.from(element, {
      y: 200,
      scrollTrigger: {
        trigger: element,
        start: 'top 100%',
      },
    });
  });

  ScrollTrigger.batch('.item', {
    onEnter: (batch) => gsap.to(batch, { opacity: 1, y: 0, stagger: { each: 0.15, grid: [1, 3] }, overwrite: true }),
    onLeaveBack: (batch) => gsap.set(batch, { opacity: 0, y: 100, overwrite: true }),
  });

  ScrollTrigger.addEventListener('refreshInit', () => {
    gsap.set('.item', { y: 0 });
  });
</script>
