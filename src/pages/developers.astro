---
import DeveloperCard from '@components/DeveloperCard.astro';
import Layout from '@layouts/Layout.astro';


const developers = [
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Varshith', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Len', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Karthik', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
  { name: 'Ameesha', description: 'All Hail Varshith', linkedinLink: '#', githubLink: '#' },
];
---

<Layout>
  <main class="content-container">
    <div id="particles-container"></div>
    <div class="mt-32 flex flex-col gap-8 items-center">
      <h2 class="fade-up uppercase text-6xl text-center">Meet the dev team</h2>
      <div class="flex flex-wrap gap-32 justify-center">
        {
          developers.map((dev, index) => (
            <div class="item">
              <DeveloperCard
                name={dev.name}
                description={dev.description}
                linkedinLink={dev.linkedinLink}
                githubLink={dev.githubLink}
              />
            </div>
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<style>
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-up {
    opacity: 0;
    transform: translateY(50px);
    animation: slideUp 1s ease-out forwards;
  }
  .content-container {
  position: relative;
  z-index: 1;
}

#particles-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  /* background: #000000; /* Optional: Black background for better contrast */
} 
</style>

<script>
  import gsap from 'gsap';
import ScrollTrigger from 'gsap/src/ScrollTrigger';
import { tsParticles, loadFull } from 'tsparticles';

gsap.registerPlugin(ScrollTrigger);

const cards = gsap.utils.toArray('.item') as HTMLDivElement[];

cards.forEach((element, i) => {
  gsap.set(element, { opacity: 0 });
  gsap.from(element, {
    y: 200,
    scrollTrigger: {
      trigger: element,
      start: 'top 100%',
    },
  });
});

ScrollTrigger.batch('.item', {
  onEnter: (batch) => gsap.to(batch, { opacity: 1, y: 0, stagger: { each: 0.15, grid: [1, 3] }, overwrite: true }),
  onLeaveBack: (batch) => gsap.set(batch, { opacity: 0, y: 100, overwrite: true }),
});

ScrollTrigger.addEventListener('refreshInit', () => {
  gsap.set('.item', { y: 0 });
});

(async () => {
  await loadFull(tsParticles);

  await tsParticles.load('particles-container', {
    fpsLimit: 60,
    particles: {
      number: {
        value: 200,
        density: {
          enable: false,
          area: 800,
        },
      },
      color: {
        value: '#fff',
      },
      shape: {
        type: 'circle',
      },
      opacity: {
        value: { min: 0.1, max: 1 },
        random: false,
        animation: {
          enable: false,
          speed: 3,
          sync: false,
        },
      },
      size: {
        value: 3,
      },
      move: {
        angle: {
          value: 10,
          offset: 0,
        },
        enable: true,
        speed: 5,
        direction: 'right',
        random: false,
        straight: true,
        outModes: 'out',
      },
      zIndex: {
        value: 5,
        opacityRate: 0.5,
      },
    },
    interactivity: {
      detectsOn: 'canvas',
      events: {
        onHover: {
          enable: false,
          mode: 'repulse',
        },
        onClick: {
          enable: true,
          mode: 'push',
        },
        resize: true,
      },
      modes: {
        grab: {
          distance: 400,
          links: {
            opacity: 1,
          },
        },
        bubble: {
          distance: 400,
          size: 40,
          duration: 2,
          opacity: 0.8,
        },
        repulse: {
          distance: 200,
        },
        push: {
          quantity: 4,
        },
        remove: {
          quantity: 2,
        },
      },
    },
    detectRetina: true,
    background: {
      color: '#000000',
    },
  });
})();

</script>
