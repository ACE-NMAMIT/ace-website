---

import { Image } from 'astro:assets';

const cards = [
  {
    title: 'cultural',
    image: 'cultural',
  },
  {
    title: 'Placement',
    image: 'Placement',
  },
  {
    title: 'incrediaripoff',
    image: 'incrediaripoff',
  },
  {
    title: 'techevent',
    image: 'techevent',
  },
  {
    title: 'techtainment1',
    image: 'techtainment1',
  },
  {
    title: 'gallery',
    image: 'gallery',
  },
  {
    title: 'placementtalks2',
    image: 'placementtalks2',
  },
  {
    title: 'projectexpo',
    image: 'projectexpo',
  },
];

const images: { [index: string]: ImageMetadata } = {};
await Astro.glob('/src/assets/images/eventpic/*.jpg').then((files) => {
  files.forEach((file) => {
    const name = file.default.src.split('.')[0].split('/').pop();
    images[name] = file.default;
  });
});


cards.forEach(card=>console.log(images[card.image]))
---

<section class="events-container content-container event-section h-fit my-8 overflow-hidden">
  <div class="marquee-container overflow-visible w-[100%] relative whitespace-nowrap h-[70vh] flex justify-center text-7xl md:text-9xl flex-col gap-0">
    <h1 class="marquee-text-1 inline-block whitespace-nowrap font-dirtyline font-medium">Events</h1>
  </div>
  <div class="grid grid-cols-1 lg:grid-cols-2 h-fit gap-8 cards-grid">
    {cards.map((card) => (
      <div class="event-card interactable" data-type="link">

        <Image
            src={images[card.image]} alt={card.title} 
            loading="lazy" 
            width={900}
          />
      </div>
    ))}
  </div>

  <div class="mx-auto mt-32 w-36 aspect-square bg-white text-black rounded-full grid place-content-center text-center transition-all duration-300 transform hover:scale-105 hover:translate-y-1 hover:shadow-2xl">
    <span class="font-bold text-lg">
      <a href="/gallery" class="hover:text-white transition-colors duration-300">view more</a>
    </span>
  </div>
  <br>
</section>
<style>
    .marquee-text-1 {
    background: linear-gradient(90deg, #e0eeee 50%, #252525 50%, #e0eeee 50%, #252525 50%);
    background-size: 200% 100%; /* Ensure the background is wide enough to animate */
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    white-space: nowrap;
  }

.mx-auto {
    position: relative;
    overflow: hidden;
    background: linear-gradient(45deg, transparent, rgb(6, 100, 252) 40%, rgb(6, 100, 252), #b0d1ff 60%, transparent);
    background-size: 400% 400%;
    animation: liquidGradient 6s ease infinite;
  }

  @keyframes liquidGradient {
    0% {
      background-position: 0% 0%;
    }
    50% {
      background-position: 100% 100%;
    }
    100% {
      background-position: 0% 0%;
    }
  }

  .hover\:shadow-2xl:hover {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .hover\:scale-110:hover {
    transform: scale(1.10);
  }

  .hover\:translate-y-2:hover {
    transform: translateY(8px); /* Adjust as needed */
  }

  .hover\:text-white:hover {
    color: white;
  }

  
  .event-section {
    --card-height: 400px;
    margin-bottom: calc(var(--card-height) / 2);
  }

  .cards-column {
    @apply flex flex-col gap-8  w-full h-full;
  }

  .event-card {
    width: 100%;
    height: var(--card-height);
    @apply rounded-[25px] flex flex-col gap-2 bg-gray-700;
  }

  .event-card img {
    @apply w-full h-full object-cover;
    border-radius: inherit;
  }

  @media (min-width: 1024px) {
    .event-card:nth-child(even) {
      margin-top: calc(var(--card-height) / 2);
      margin-bottom: calc(-1 * var(--card-height) / 2);
    }
    .cards-grid {
      padding-bottom: calc(var(--card-height) / 2);
    }
  }

</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    gsap.registerPlugin(ScrollTrigger);
    const start1X = -250;
    const end1X = -10;

    gsap.fromTo(
      '.events-container .marquee-text-1',
      {
        x: start1X,
        backgroundPosition: '145% 0', // Start with background far to the right
      },
      {
        x: end1X,
        backgroundPosition: '22% 0', // Animate background to the left
        ease: 'none',
        scrollTrigger: {
          trigger: '.events-container .marquee-text-1',
          start: 'top bottom',
          end: 'bottom 90%',
          scrub: 1,
        },
      }
    );

    //left cards
    const leftCards = document.querySelectorAll('.event-card:nth-child(odd)');

    window.gsapContext.add(() => {
      Array.from(leftCards).forEach((card) => {
        gsap.fromTo(
          card,
          {
            x: -300,
            opacity: 0,
            rotate: '-45deg',
          },
          {
            x: 0,
            opacity: 1,
            rotate: '0deg',
            ease: 'power4.inOut',
            scrollTrigger: {
              scrub: 0.3,
              trigger: card,
              end: 'center center',
              start: 'top 100%',
              toggleActions: 'restart none none none',
            },
          }
        );
      });
    });

    //right cards
    const rightCards = document.querySelectorAll('.event-card:nth-child(even)');
    window.gsapContext.add(() => {
      Array.from(rightCards).forEach((card) => {
        gsap.from(card, {
          x: 300,
          opacity: 0,
          rotate: '45deg',
          ease: 'power4.inOut',
          scrollTrigger: {
            scrub: 0.3,
            trigger: card,
            end: 'center center',
            toggleActions: 'play none none none',
          },
        });
      });
    });
  });
</script>
