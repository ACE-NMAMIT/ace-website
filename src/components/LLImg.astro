---
interface Props {
  imgURL: string;
  placeholderColor?: string;
  style?: string;
  alt?: string;
}
const { imgURL, placeholderColor = '#f0f0f0', style, alt } = Astro.props;
---

<div class="image-wrapper" style={`background-color: ${placeholderColor};`}>
  <img
    data-src={imgURL}
    alt={alt}
    style={style}
    class="lazy-image"
    loading="lazy"
  />
</div>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const lazyImages = document.querySelectorAll('.lazy-image');
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const img = entry.target;
          img.src = img.getAttribute('data-src');
          img.classList.add('loaded');
          observer.unobserve(img);
        }
      });
    });

    lazyImages.forEach(img => {
      observer.observe(img);
    });
  });
</script>

<style>
  .image-wrapper {
    border-radius: 15px;
    overflow: hidden;
    position: relative;
    height: 300px; /* Adjust as needed */
    width: auto;
  }

  .lazy-image {
    object-fit: cover;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .lazy-image.loaded {
    opacity: 1;
  }
</style>
